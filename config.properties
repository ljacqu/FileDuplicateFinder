# Set to always run the same task:
# task=rename,addDate,duplicates


# #######
# Configuration for file renaming tasks  (rename, addDate)
# #######
# Folder to rename files in (visits all child folders)
# rename.folder=

# Regex rename: regex to match files by
rename.regex.from=IMG_E(\\d+)\\.JPG
# Regex rename: what to rename files to (use $1 etc. for capturing groups)
rename.regex.to=IMG_$1E\\.JPG

# Date rename: what to rename the file to. {file} = full file name; {name} = file name without extension;
#  {ext} = extension (without dot), {date} = last modified date
rename.date.to={date}_{file}
# Date rename: formatting of the last modified date. See https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#patterns
rename.date.dateFormat=yyyyMMdd


# #######
# Configuration for duplicate finder
# #######
# Path at which the processing of files starts
# duplicates.folder=

# Algorithm used to hash the file contents with
duplicates.hash.algorithm=sha1
# If a file's size exceeds the below threshold, matching will be done by file size only
duplicates.hash.maxSizeForHashingInMb=300

# Glob filter of files to consider (optional)
#   See https://docs.oracle.com/javase/7/docs/api/java/nio/file/FileSystem.html#getPathMatcher(java.lang.String)
duplicates.filter.blacklist=
duplicates.filter.whitelist=

# Min and max size of files to consider (optional)
duplicates.filter.minSizeInMb=
duplicates.filter.maxSizeInMb=

# One file in a matched group of duplicates must match the given pattern to be shown as result (optional)
duplicates.filter.resultWhitelist=

# The number of bytes configured will first be read and compared for files that exceed the given file size
# before the file's contents are hashed.
duplicates.readBeforeHash.minSizeInMb=1024
duplicates.readBeforeHash.bytesToRead=64

# Configures what should be output. Besides "showDuplicates" everything else is a debug output.
duplicates.output.showDuplicates=true
duplicates.output.showFolderPairCount=true
duplicates.output.showDistribution=true
duplicates.output.showDifferenceReadFilesVsHash=true
# Interval in which to output some progress. Must be a power of 2 minus 1 (e.g. 63, 127, 255, 511)
duplicates.output.progress.filesFoundInterval=1023
duplicates.output.progress.filesHashedInterval=511